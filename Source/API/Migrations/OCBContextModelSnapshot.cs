// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OCBManager.Data.Data;

#nullable disable

namespace OCBManager.API.Migrations
{
    [DbContext(typeof(OCBContext))]
    partial class OCBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OCBManager.Domain.Models.Bill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BillNumber")
                        .HasColumnType("int");

                    b.Property<string>("IncomingBalanceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutgoingBalanceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurnoverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurnoverSheetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BillClassId");

                    b.HasIndex("TurnoverSheetId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.BillClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("IncomingBalanceActive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IncomingBalancePassive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OutgoingBalanceActive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OutgoingBalancePassive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TurnoverCredit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TurnoverDebit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("BillClasses");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.IncomingBalance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Active")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Passive")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("IncomingBalances");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.OutgoingBalance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Active")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Passive")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("OutgoingBalances");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.Turnover", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("Turnovers");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.TurnoverSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndOfThePeriod")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IncomingBalanceActive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IncomingBalancePassive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OutgoingBalanceActive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OutgoingBalancePassive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartOfThePeriod")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TurnoverCredit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TurnoverDebit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TurnoverSheets");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.Bill", b =>
                {
                    b.HasOne("OCBManager.Domain.Models.BillClass", "BillClass")
                        .WithMany("Bills")
                        .HasForeignKey("BillClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCBManager.Domain.Models.TurnoverSheet", "TurnoverSheet")
                        .WithMany()
                        .HasForeignKey("TurnoverSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillClass");

                    b.Navigation("TurnoverSheet");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.IncomingBalance", b =>
                {
                    b.HasOne("OCBManager.Domain.Models.Bill", "Bill")
                        .WithOne("IncomingBalance")
                        .HasForeignKey("OCBManager.Domain.Models.IncomingBalance", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.OutgoingBalance", b =>
                {
                    b.HasOne("OCBManager.Domain.Models.Bill", "Bill")
                        .WithOne("OutgoingBalance")
                        .HasForeignKey("OCBManager.Domain.Models.OutgoingBalance", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.Turnover", b =>
                {
                    b.HasOne("OCBManager.Domain.Models.Bill", "Bill")
                        .WithOne("Turnover")
                        .HasForeignKey("OCBManager.Domain.Models.Turnover", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("OCBManager.Domain.Models.Bill", b =>
                {
                    b.Navigation("IncomingBalance")
                        .IsRequired();

                    b.Navigation("OutgoingBalance")
                        .IsRequired();

                    b.Navigation("Turnover")
                        .IsRequired();
                });

            modelBuilder.Entity("OCBManager.Domain.Models.BillClass", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
